#!/bin/bash

BATTERY="0"

get-status() {
    acpi -b | grep -v "unavailable" | head -n 1 | awk -F'[,:%]' '{print $2, $3}'
}

main() {
    get-status | {
        read -r status capacity

        if [[ $status == Discharging ]]; then
            if [[ $capacity -le 20 && $capacity -gt 15 ]]; then
                $HOME/scripts/psbacklight set 20
                notify-send -u critical "Battery low" "Battery is at ${capacity}%"
            elif [[ $capacity -le 15 ]]; then
                notify-send -u critical "Battery low" "Battery is at ${capacity}%, will suspend in 2 minutes if not charged"
                sleep 120
                get-status | {
                    read -r status capacity
                                if [[ $status == Discharging && $capacity -le 15 ]]; then
                                    systemctl suspend
                                else
                                    notify-send -u critical "Battery low" "Battery charging, suspending cancelled"
                                fi
                            }
            fi
        fi
    }
}


SYSTEMD_SERVICE_PATH="$HOME/.config/systemd/user/monitor-battery.service"
read -r -d '' SYSTEMD_SERVICE << EOM
[Unit]
Description=Monitor battery

[Service]
Type=simple
ExecStart=/bin/bash -c $HOME/scripts/monitor-battery
EOM

SYSTEMD_TIMER_PATH="$HOME/.config/systemd/user/monitor-battery.timer"
read -r -d '' SYSTEMD_TIMER << EOM
[Unit]
Description=Run monitor-battery every minute

[Timer]
OnCalendar=minutely
Unit=monitor-battery.service

[Install]
WantedBy=timers.target
EOM

install() {
    mkdir -p $(dirname "$SYSTEMD_SERVICE_PATH")
    mkdir -p $(dirname "$SYSTEMD_TIMER_PATH")
    echo "$SYSTEMD_SERVICE" > "$SYSTEMD_SERVICE_PATH"
    echo "$SYSTEMD_TIMER" > "$SYSTEMD_TIMER_PATH"

    systemctl --user daemon-reload
    systemctl --user enable monitor-battery.timer
    systemctl --user start monitor-battery.timer

    systemctl --user status monitor-battery.timer
}

if [[ $1 == install ]]; then
    install
elif [[ $1 == status ]]; then
    systemctl --user status monitor-battery.timer
elif [[ $1 == stop ]]; then
    systemctl --user stop monitor-battery.timer
    systemctl --user stop monitor-battery.service
elif [[ $1 == start ]]; then
    systemctl --user start monitor-battery.timer
else
    main
fi
